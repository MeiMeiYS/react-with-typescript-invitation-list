{"version":3,"sources":["components/List.tsx","components/AddToList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["List","people","map","person","key","className","src","url","name","age","note","AddToList","setPeople","useState","img","input","setInput","handleChange","e","target","value","type","placeholder","onChange","onClick","parseInt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQA4BeA,EAxBgB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAiB9B,OACI,6BAfOA,EAAOC,KAAI,SAACC,EAAQC,GACvB,OACI,qBAAcC,UAAU,OAAxB,UACA,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,WAAWC,IAAKH,EAAOI,MACtC,6BAAKJ,EAAOK,UAEhB,8BAAIL,EAAOM,IAAX,gBACA,mBAAGJ,UAAU,YAAb,SAA0BF,EAAOO,SANxBN,S,qBC+EVO,EAhFoB,SAAC,GAA2B,IAAzBV,EAAwB,EAAxBA,OAAQW,EAAgB,EAAhBA,UAE1C,EAA0BC,mBAAS,CAC/BL,KAAM,GACNC,IAAK,GACLK,IAAK,GACLJ,KAAM,KAJV,mBAAOK,EAAP,KAAcC,EAAd,KAOMC,EAAe,SAACC,GAClBF,EAAS,2BACFD,GADC,kBAEHG,EAAEC,OAAOX,KAAOU,EAAEC,OAAOC,UA4BlC,OACI,sBAAKf,UAAU,YAAf,UACI,uBACIgB,KAAK,OACLC,YAAY,OACZjB,UAAU,kBACVe,MAAOL,EAAMP,KACbe,SAAUN,EACVT,KAAK,SAET,uBACIa,KAAK,OACLC,YAAY,MACZjB,UAAU,kBACVe,MAAOL,EAAMN,IACbc,SAAUN,EACVT,KAAK,QAET,uBACIa,KAAK,OACLC,YAAY,YACZjB,UAAU,kBACVe,MAAOL,EAAMD,IACbS,SAAUN,EACVT,KAAK,QAET,0BACIc,YAAY,QACZjB,UAAU,kBACVe,MAAOL,EAAML,KACba,SAAUN,EACVT,KAAK,SAET,wBAAQH,UAAU,gBAAgBmB,QAzDtB,WAEXT,EAAMP,MACNO,EAAMN,KACNM,EAAMD,MAIXF,EAAU,GAAD,mBACFX,GADE,CACM,CACPO,KAAMO,EAAMP,KACZC,IAAKgB,SAASV,EAAMN,KACpBF,IAAKQ,EAAMD,IACXJ,KAAMK,EAAML,SAGpBM,EAAS,CACLR,KAAM,GACNC,IAAK,GACLK,IAAK,GACLJ,KAAM,OAqCN,6B,MC9CGgB,MArBf,WAEE,MAA4Bb,mBAA2B,CACrD,CACEL,KAAM,eACND,IAAK,6DACLE,IAAK,GACLC,KAAM,2CALV,mBAAOT,EAAP,KAAeW,EAAf,KAUA,OACE,sBAAKP,UAAU,MAAf,UACE,4DACA,cAAC,EAAD,CAAMJ,OAAQA,IACd,cAAC,EAAD,CAAWA,OAAQA,EAAQW,UAAWA,QChB7Be,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eb2bf84b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { IState as IProps } from '../App';\r\n\r\n\r\nconst List: React.FC<IProps> = ({ people }) => {\r\n\r\n    const renderList = (): JSX.Element[] => {\r\n        return people.map((person, key) => {\r\n            return (\r\n                <li key={key} className='List'>\r\n                <div className='List-header'>\r\n                    <img className='List-img' src={person.url}/>\r\n                    <h2>{person.name}</h2>\r\n                </div>\r\n                <p>{person.age} years old</p>\r\n                <p className='List-note'>{person.note}</p>\r\n            </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    return(\r\n        <ul>\r\n            {renderList()}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default List;","import React, { useState } from \"react\";\r\nimport { IState as Props } from '../App';\r\n\r\ninterface IProps {\r\n    people: Props['people']\r\n    setPeople: React.Dispatch<React.SetStateAction<Props['people']>>\r\n}\r\n\r\nconst AddToList:React.FC<IProps> = ({ people, setPeople }) => {\r\n\r\n    const [input, setInput] = useState({\r\n        name: '', \r\n        age: '', \r\n        img: '', \r\n        note: ''\r\n    })\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>):void => {\r\n        setInput({\r\n            ...input, \r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleClick = (): void => {\r\n        if(\r\n            !input.name || \r\n            !input.age ||\r\n            !input.img\r\n        ) {\r\n            return\r\n        }\r\n        setPeople([\r\n            ...people, {\r\n                name: input.name, \r\n                age: parseInt(input.age), \r\n                url: input.img, \r\n                note: input.note\r\n            }\r\n        ]);\r\n        setInput({\r\n            name: '', \r\n            age: '', \r\n            img: '', \r\n            note: ''\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='AddToList'>\r\n            <input\r\n                type='text'\r\n                placeholder='Name'\r\n                className='AddToList-input'\r\n                value={input.name}\r\n                onChange={handleChange}\r\n                name='name'\r\n            />\r\n            <input\r\n                type='text'\r\n                placeholder='Age'\r\n                className='AddToList-input'\r\n                value={input.age}\r\n                onChange={handleChange}\r\n                name='age'\r\n            />\r\n            <input\r\n                type='text'\r\n                placeholder='Image Url'\r\n                className='AddToList-input'\r\n                value={input.img}\r\n                onChange={handleChange}\r\n                name='img'\r\n            />\r\n            <textarea\r\n                placeholder='Notes'\r\n                className='AddToList-input'\r\n                value={input.note}\r\n                onChange={handleChange}\r\n                name='note'\r\n            />\r\n            <button className='AddToList-btn' onClick={handleClick}>\r\n                Add to List\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddToList;","import React, { useState } from 'react';\nimport List from './components/List';\nimport AddToList from './components/AddToList';\nimport './App.css';\n\nexport interface IState {\n  people:{\n    name: string\n    age: number\n    url: string\n    note?: string\n  }[]\n}\n\nfunction App() {\n\n  const [people, setPeople] = useState<IState['people']>([\n    {\n      name: 'LeBron James',\n      url: 'https://cdn.nba.com/headshots/nba/latest/1040x760/2544.png', \n      age: 36, \n      note: 'Allergic to staying on the same team.'\n    }\n  ])\n\n\n  return (\n    <div className=\"App\">\n      <h1>People Invited to my Party</h1>\n      <List people={people}/>\n      <AddToList people={people} setPeople={setPeople}/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}